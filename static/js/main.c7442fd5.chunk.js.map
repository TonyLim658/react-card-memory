{"version":3,"sources":["logo.svg","components/CardBoard.style.ts","images/piggy512x512.png","components/Card.style.ts","components/Card.tsx","images/boarding_pass.jpg","images/code.png","images/nook.jpg","components/CardBoard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","Card","num","userAnswer","callback","imagePath","cardRevealed","className","disabled","firstCardSelected","secondCardSelected","onClick","value","src","notRevealedImage","alt","EMPTY_ANSWER","undefined","CardBoard","useState","setUserAnswer","cardImg","img1","img2","img3","checkAnswer","e","answerObject","val","Number","currentTarget","console","log","correct","map","path","ind","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,G,MAAA,IAA0B,kC,yXCElC,IAAMA,EAAUC,IAAOC,IAAV,KCFL,MAA0B,yC,s0DCElC,IAAMF,EAAUC,IAAOC,IAAV,KC6BLC,EAjBe,SAAC,GAAD,IAC1BC,EAD0B,EAC1BA,IACAC,EAF0B,EAE1BA,WACAC,EAH0B,EAG1BA,SACAC,EAJ0B,EAI1BA,UACAC,EAL0B,EAK1BA,aAL0B,OAO1B,cAAC,EAAD,UACI,qBAAKC,UAAU,OAAf,SACQ,wBAAQC,SAAUF,EAAaJ,KAAkB,OAAVC,QAAU,IAAVA,OAAA,EAAAA,EAAYM,qBAAsBP,IAAiB,OAAVC,QAAU,IAAVA,OAAA,EAAAA,EAAYO,sBAAuBR,EAC3GS,QAASP,EAAUQ,MAAOV,EADlC,SAEI,qBAAKW,IAAKP,EAAaJ,KAAkB,OAAVC,QAAU,IAAVA,OAAA,EAAAA,EAAYM,qBAAsBP,IAAiB,OAAVC,QAAU,IAAVA,OAAA,EAAAA,EAAYO,sBAAuBR,EAAMG,EAAYS,EAAkBC,IAAKV,WCzBzJ,MAA0B,0CCA1B,MAA0B,iCCA1B,MAA0B,iCCgBnCW,EAAe,CAACP,uBAAmBQ,EAAWP,wBAAoBO,GA8DzDC,EA5DG,WAAO,IAAD,EACgBC,mBAAuBH,GADvC,mBACbb,EADa,KACDiB,EADC,OAEoBD,mBAAoB,IAFxC,mBAEbb,EAFa,KAIde,GAJc,KAIM,CAACC,EAAMC,EAAMD,EAAMC,EAAMC,EAAMA,IAUnDC,EAAc,SAACC,GAA4C,IAAD,IAGxDC,EAFEC,EAAcC,OAAOH,EAAEI,cAAclB,OAgB3C,GAfAmB,QAAQC,IAAI,OAGRL,GADJ,OAAIxB,QAAJ,IAAIA,OAAJ,EAAIA,EAAYM,mBACG,CACXA,kBAAiB,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAYM,kBAC/BC,mBAAoBkB,GAGT,CACXnB,kBAAmBmB,EACnBlB,wBAAoBO,GAG5BG,EAAcO,GACdI,QAAQC,IAAIL,IACG,QAAZ,EAAAA,SAAA,eAAclB,qBAAd,UAAmCkB,SAAnC,aAAmC,EAAcjB,oBAAoB,CAAC,IAAD,EACpEqB,QAAQC,IAAI,WACZ,IAAMC,EAAUZ,EAAQM,EAAalB,kBAAkB,KAAOY,EAAQM,EAAajB,mBAAmB,GACtGJ,EAAY,UAACqB,SAAD,aAAC,EAAclB,mBACHH,EAAaqB,EAAajB,oBAAsBuB,EACxEF,QAAQC,IAAI1B,GAEZc,EAAcJ,KAItB,OACI,cAAClB,EAAD,UACI,qBAAKS,UAAU,YAAf,SACKc,EAAQa,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,EAAD,CAEIlC,IAAKkC,EAAI,EACThC,SAAUqB,EACVpB,UAAW8B,EACXhC,WAAYA,EACZG,aAAcA,GALT8B,WC/CdC,EAXH,WACR,OACI,qBAAK9B,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKM,IAAKyB,EAAM/B,UAAU,WAAWQ,IAAI,SACzC,cAAC,EAAD,UCEDwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7442fd5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    .cardboard {\r\n        display: -webkit-flex;\r\n        -webkit-flex-direction: row;\r\n        -webkit-flex-wrap: wrap;\r\n        width: 500px;\r\n        height: auto;\r\n        min-height: 200px;\r\n    }\r\n\r\n    #flexbox .card {\r\n        -webkit-flex: 130px 1;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/piggy512x512.fea9bbb8.png\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    .card button{\r\n        background: transparent;\r\n    }\r\n\r\n    .card button, img{\r\n        margin: auto;\r\n        display: flex;\r\n        text-align: initial;\r\n        width: 100px;\r\n        height: 100px;\r\n    }\r\n\r\n    .hexagon-wrapper {\r\n    margin: auto;\r\n    display: flex;\r\n    text-align: initial;\r\n    width: 200px;\r\n    height: 200px;\r\n    cursor: pointer;\r\n    }\r\n\r\n    .hexagon {\r\n    position: relative;\r\n    width: 46%;\r\n    height: 80%;\r\n    margin: auto;\r\n    color: white;\r\n    background: linear-gradient(-180deg, white, #fda3b2);\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n    transition: 0.5s;\r\n    }\r\n\r\n    .hexagon img {\r\n    position: relative;\r\n    width: 46%;\r\n    height: 80%;\r\n    margin: auto;\r\n    color: white;\r\n    background: linear-gradient(-180deg, white, #fda3b2);\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n    transition: 0.5s;\r\n    }\r\n\r\n    .hexagon button {\r\n    z-index: 1;\r\n    margin: auto;\r\n    font-size: 50px;\r\n    color: transparent;\r\n    background: linear-gradient(45deg, #a58fe9, #e37682);\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    }\r\n\r\n    .hexagon:before,\r\n    .hexagon:after {\r\n    position: absolute;\r\n    content: \"\";\r\n    background: inherit;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-radius: 0;\r\n    transition: 0.5s;\r\n    transform-origin: center;\r\n    }\r\n    .hexagon:before {\r\n    transform: rotateZ(60deg);\r\n    }\r\n    .hexagon:after {\r\n    transform: rotateZ(-60deg);\r\n    }\r\n    .hexagon:hover {\r\n    border-radius: 50px;\r\n    transition: 0.5s;\r\n    }\r\n    .hexagon:hover:before {\r\n    border-radius: 50px;\r\n    transition: 0.5s;\r\n    }\r\n    .hexagon:hover:after {\r\n    border-radius: 50px;\r\n    transition: 0.5s;\r\n    }\r\n`","import React from 'react';\r\nimport notRevealedImage from '../images/piggy512x512.png';\r\nimport {AnswerObject} from './CardBoard';\r\n// Styles\r\nimport { Wrapper } from './Card.style'\r\n\r\ntype Props = {\r\n    num: number;\r\n    userAnswer: AnswerObject | undefined;\r\n    cardRevealed: boolean[];\r\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n    imagePath: string;\r\n}\r\n\r\nconst Card: React.FC<Props> = ({\r\n    num,\r\n    userAnswer,\r\n    callback,\r\n    imagePath,\r\n    cardRevealed\r\n}) => (\r\n    <Wrapper>\r\n        <div className='card'>\r\n                <button disabled={cardRevealed[num] || userAnswer?.firstCardSelected === num || userAnswer?.secondCardSelected === num} \r\n                        onClick={callback} value={num}>\r\n                    <img src={cardRevealed[num] || userAnswer?.firstCardSelected === num || userAnswer?.secondCardSelected === num ? imagePath : notRevealedImage} alt={imagePath} />\r\n                </button>\r\n        </div>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Card;","export default __webpack_public_path__ + \"static/media/boarding_pass.cf14b0b8.jpg\";","export default __webpack_public_path__ + \"static/media/code.b6e6e612.png\";","export default __webpack_public_path__ + \"static/media/nook.8a7c3c64.jpg\";","import React, { useState } from 'react';\r\n// Styles\r\nimport { Wrapper } from './CardBoard.style'\r\n// Components\r\nimport Card from './Card'\r\n// Images\r\nimport img1 from '../images/boarding_pass.jpg';\r\nimport img2 from '../images/code.png';\r\nimport img3 from '../images/nook.jpg';\r\nimport img4 from '../images/qr_code.png';\r\nimport img5 from '../images/todd_ross.jpg';\r\n\r\nexport type AnswerObject = {\r\n    firstCardSelected: number | undefined;\r\n    secondCardSelected: number | undefined;\r\n}\r\nconst EMPTY_ANSWER = {firstCardSelected: undefined, secondCardSelected: undefined}\r\n\r\nconst CardBoard = () => {\r\n    const [userAnswer, setUserAnswer] = useState<AnswerObject>(EMPTY_ANSWER);\r\n    const [cardRevealed, setCardRevealed] = useState<boolean[]>([]);\r\n    // TODO set as more generic\r\n    const cardImg: string[] = [img1, img2, img1, img2, img3, img3];\r\n\r\n    // TODO start\r\n    const startTrivia = async () => {\r\n        setUserAnswer(EMPTY_ANSWER);\r\n        // setCardRevealed([false]);\r\n        // TODO better setting\r\n    }\r\n    \r\n\r\n    const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        const val: number = Number(e.currentTarget.value)\r\n        console.log('bui');\r\n        let answerObject: AnswerObject;\r\n        if (userAnswer?.firstCardSelected) {\r\n            answerObject = {\r\n                firstCardSelected: userAnswer?.firstCardSelected,\r\n                secondCardSelected: val\r\n            }\r\n        } else {\r\n            answerObject = {\r\n                firstCardSelected: val,\r\n                secondCardSelected: undefined\r\n            }\r\n        }\r\n        setUserAnswer(answerObject);\r\n        console.log(answerObject)\r\n        if(answerObject?.firstCardSelected && answerObject?.secondCardSelected) {\r\n            console.log('waiting');\r\n            const correct = cardImg[answerObject.firstCardSelected-1] === cardImg[answerObject.secondCardSelected-1];\r\n            cardRevealed[answerObject?.firstCardSelected] = \r\n                                    cardRevealed[answerObject.secondCardSelected] = correct;\r\n            console.log(cardRevealed);\r\n            // TODO waiting with state\r\n            setUserAnswer(EMPTY_ANSWER);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className='cardboard'>\r\n                {cardImg.map((path, ind) => (\r\n                    <Card\r\n                        key={ind}\r\n                        num={ind+1}\r\n                        callback={checkAnswer}\r\n                        imagePath={path}\r\n                        userAnswer={userAnswer}\r\n                        cardRevealed={cardRevealed}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default CardBoard;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// Components\nimport CardBoard from './components/CardBoard';\n// TODO set import for images\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <CardBoard/>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}